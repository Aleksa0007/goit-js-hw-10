{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector(\".form\");\nlet isFulfielled = true;\n\nform.addEventListener(\"submit\", event => {\n    event.preventDefault();\n\n    const inputValue = parseInt(form.elements.delay.value.trim(), 10);\n    const checked = form.querySelector('input[name=\"state\"]:checked');\n    isFulfielled = checked.value == \"fulfilled\";\n\n    makeNotification(inputValue)\n    .then( () => {\n        iziToast.success({\n            title: \"success\",\n            message: `✅ Fulfilled promise in ${inputValue}ms`\n        });\n    })\n    .catch(() => {\n        iziToast.error({\n            title: \"Error\",\n            message: `❌ Rejected promise in ${inputValue}ms`\n        });\n    });\n})\n\nfunction makeNotification(delay) {\n    \n    return new Promise ((resolve, rejected) => {\n         setTimeout(() => {\n            \n            if(isFulfielled){\n                resolve();\n            } else {\n                rejected();\n            }\n\n        }, delay)\n    })\n}\n"],"names":["form","isFulfielled","event","inputValue","makeNotification","iziToast","delay","resolve","rejected"],"mappings":"4IAGA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAC3C,IAAIC,EAAe,GAEnBD,EAAK,iBAAiB,SAAUE,GAAS,CACrCA,EAAM,eAAc,EAEpB,MAAMC,EAAa,SAASH,EAAK,SAAS,MAAM,MAAM,OAAQ,EAAE,EAEhEC,EADgBD,EAAK,cAAc,6BAA6B,EACzC,OAAS,YAEhCI,EAAiBD,CAAU,EAC1B,KAAM,IAAM,CACTE,EAAS,QAAQ,CACb,MAAO,UACP,QAAS,0BAA0BF,CAAU,IACzD,CAAS,CACT,CAAK,EACA,MAAM,IAAM,CACTE,EAAS,MAAM,CACX,MAAO,QACP,QAAS,yBAAyBF,CAAU,IACxD,CAAS,CACT,CAAK,CACL,CAAC,EAED,SAASC,EAAiBE,EAAO,CAE7B,OAAO,IAAI,QAAS,CAACC,EAASC,IAAa,CACtC,WAAW,IAAM,CAEXP,EACCM,IAEAC,GAGP,EAAEF,CAAK,CAChB,CAAK,CACL"}